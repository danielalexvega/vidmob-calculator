{"version":3,"sources":["Components/UIElements/Button.js","Components/CalculatorFeatures/IntegerKeypad.js","Components/CalculatorFeatures/OptionsContainer.js","Components/SharedStatic/OPERATION_ARR.js","Components/CalculatorFeatures/OperationContainer.js","Components/CalculatorFeatures/CalculatorDisplay.js","Components/Functions/functions.js","Components/CalculatorFeatures/CalculatorContainer.js","App.js","index.js"],"names":["Button","props","type","onClick","value","disabled","children","sizeClass","size","inverseClass","inverse","dangerClass","danger","className","IntegerKeypad","handleButtonClick","label","map","button","OptionsContainer","handleOptionsClick","option","OPERATION_ARR","OperationContainer","operation","CalculatorDisplay","display","handleInput","handleSubmit","onChange","onKeyDown","findOperations","valueArr","modifiedOperationsArr","push","opertionsArr","forEach","index","includes","solve","integerArr","operationArr","first_order","second_order","console","log","i","length","tempSolution","operate","splice","solution","value1","value2","CalculatorContainer","useState","setDisplay","containsError","setContainsError","containsParenthesis","equation","validEquation","containsFrontParenthesis","displayError","j","simplifyEquation","frontParenthesis","findIndex","closingParenthesis","lastIndexOf","insideEquation","filter","integer","operationsIndexArr","tempInt","parseFloat","solveSetup","calculuate","split","checkForMultipleOperations","startIndex","endIndex","decimal","k","handleDecimals","plusMinus","updatedValue","leadingNegative","removeDoubleNegatives","factorial","handleFactorial","findIntegerOperationArr","isNaN","handleIntegerClick","event","target","toString","substring","onSubmit","key","App","ReactDOM","render","document","getElementById"],"mappings":"uTAwBeA,EApBA,SAACC,GACZ,IAAQC,EAAoED,EAApEC,KAAMC,EAA8DF,EAA9DE,QAASC,EAAqDH,EAArDG,MAAOC,EAA8CJ,EAA9CI,SAAUC,EAAoCL,EAApCK,SAElCC,EAFsEN,EAA1BO,KAE5B,eAAoB,GACpCC,EAHsER,EAApBS,QAG5B,kBAAuB,GAC7CC,EAJsEV,EAAXW,OAIvC,iBAAsB,GAEhD,OACI,wBACIC,UAAS,iBAAYN,EAAZ,YAAyBI,EAAzB,YAAwCF,GACjDP,KAAMA,EACNC,QAASA,EACTE,SAAUA,EACVD,MAAOA,EALX,SAOKE,KCeEQ,G,MA3BO,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,kBAgBrB,OACI,qBAAKF,UAAU,gBAAf,SAhBgB,CAChB,CAAET,MAAO,EAAGY,MAAO,KACnB,CAAEZ,MAAO,EAAGY,MAAO,KACnB,CAAEZ,MAAO,EAAGY,MAAO,KACnB,CAAEZ,MAAO,EAAGY,MAAO,KACnB,CAAEZ,MAAO,EAAGY,MAAO,KACnB,CAAEZ,MAAO,EAAGY,MAAO,KACnB,CAAEZ,MAAO,EAAGY,MAAO,KACnB,CAAEZ,MAAO,EAAGY,MAAO,KACnB,CAAEZ,MAAO,EAAGY,MAAO,KACnB,CAAEZ,MAAO,EAAGY,MAAO,KACnB,CAAEZ,MAAO,IAAKY,MAAO,MAMJC,KAAI,SAAAC,GAAM,OACnB,cAAC,EAAD,CAA2Bf,QAASY,EAAmBX,MAAOc,EAAOd,MAArE,SACKc,EAAOF,OADCE,EAAOF,cCKrBG,G,MAzBU,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,mBAUvB,OACI,qBAAKP,UAAU,gBAAf,SATiB,CACjB,CAAET,MAAO,KAAMY,MAAO,MACtB,CAAEZ,MAAO,IAAKY,MAAO,KACrB,CAAEZ,MAAO,IAAKY,MAAO,KACrB,CAACZ,MAAO,MAAOY,MAAO,QAMJC,KAAI,SAAAI,GAAM,OACpB,cAAC,EAAD,CACIR,UAAU,iBAEVV,QAASiB,EACThB,MAAOiB,EAAOjB,MAJlB,SAKKiB,EAAOL,OAHHK,EAAOL,cCnBjBM,EAFO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KCwBtCC,G,MAjBY,SAAC,GAA2B,IAAzBR,EAAwB,EAAxBA,kBAE1B,OACI,qBAAKF,UAAU,kBAAf,SACKS,EAAcL,KAAI,SAAAO,GAAS,OACxB,cAAC,EAAD,CACIX,UAAU,oBAEVV,QAASY,EACTX,MAAOoB,EAJX,SAKKA,GAHIA,UCEVC,G,MAZW,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC/C,OACQ,uBACIf,UAAU,qBACVX,KAAK,OACL2B,SAAUF,EACVvB,MAAOsB,EACPI,UAAWF,M,eCwD3B,SAASG,EAAeC,GACpB,IAAIC,EAAqB,YAAOX,GAChCW,EAAsBC,KAAK,KAC3BD,EAAsBC,KAAK,KAC3B,IAAIC,EAAe,GAOnB,OANAH,EAASI,SAAQ,SAAChC,EAAOiC,GACjBJ,EAAsBK,SAASlC,IAC/B+B,EAAaD,KAAKG,MAInBF,EAgDX,SAASI,EAAMC,EAAYC,GACvB,IAAIC,EAAc,CAAC,IAAK,IAAK,KACzBC,EAAe,CAAC,IAAK,KAEzBC,QAAQC,IAAI,qBACZD,QAAQC,IAAIL,GACZI,QAAQC,IAAIJ,GAGZ,IAAK,IAAIK,EAAI,EAAGA,EAAIN,EAAWO,OAAS,EAAGD,IACvC,GAAIJ,EAAYJ,SAASG,EAAaK,IAAK,CACvC,IAAIE,EAAeC,EAAQR,EAAaK,GAAIN,EAAWM,GAAIN,EAAWM,EAAI,IAE1EL,EAAaS,OAAOJ,EAAG,GACvBN,EAAWU,OAAOJ,EAAG,EAAGE,GACxBF,IAEAF,QAAQC,IAAR,eACAD,QAAQC,IAAIJ,GACZG,QAAQC,IAAIL,GAGpB,GAA0B,IAAtBA,EAAWO,OACX,OAAOP,EAAW,GAKtB,IAFA,IAAIW,EAAW,EAENL,EAAI,EAAGA,EAAIN,EAAWO,OAAS,EAAGD,IAEnCK,EADAR,EAAaL,SAASG,EAAaK,KAAoB,IAAbK,EAC/BF,EAAQR,EAAaK,GAAIN,EAAWM,GAAIN,EAAWM,EAAI,IAEvDG,EAAQR,EAAaK,GAAIK,EAAUX,EAAWM,EAAI,IAMrE,OAFAF,QAAQC,IAAR,0BAA+BM,IAExBA,EAIX,SAASF,EAAQzB,EAAW4B,EAAQC,GAChC,IAAIF,EACJ,OAAQ3B,GACJ,IAAK,IACD2B,EAAWC,EAASC,EACpB,MACJ,IAAK,IACDF,EAAWC,EAASC,EACpB,MACJ,IAAK,IACDF,EAAWC,EAASC,EACpB,MACJ,IAAK,IACDF,EAAWC,EAASC,EACpB,MACJ,IAAK,IACDF,EAAWC,EAASC,EAI5B,OAAOF,ECtKX,IAgKeG,EAhKa,WACxB,MAA8BC,mBAAS,IAAvC,mBAAO7B,EAAP,KAAgB8B,EAAhB,KACA,EAA0CD,oBAAS,GAAnD,mBAAOE,EAAP,KAAsBC,EAAtB,KAEA,SAASC,EAAoBC,GAGzB,IAFA,IAAIC,GAAgB,EAChBC,GAA2B,EACtBhB,EAAI,EAAGA,EAAIc,EAASb,OAAS,EAAGD,IAAK,CAC1C,GAAoB,MAAhBc,EAASd,KAAegB,EAExB,YADAC,IAIJ,GAAoB,MAAhBH,EAASd,GAAY,CACrBgB,GAA2B,EAC3B,IAAK,IAAIE,EAAIlB,EAAI,EAAGkB,EAAIJ,EAASb,OAAQiB,IACjB,MAAhBJ,EAASI,KACTH,GAAgB,GAGxB,IAAKA,EAED,YADAE,KAMZ,OAAOF,EAGX,SAASE,IACLL,GAAiB,GACjBF,EAAW,SAcf,SAASS,EAAiBL,GAEtB,IAAIM,EAAmBN,EAASO,WAAU,SAAA/D,GAAK,MAAc,MAAVA,KAC/CgE,EAAqBR,EAASS,YAAY,MAElB,IAAxBD,GACAL,IAGJ,IAAIO,EAAiBV,EAASW,QAAO,SAACC,EAASnC,GAAV,OAAqBA,EAAQ6B,GAAoB7B,EAAQ+B,KAC9F,GAAIT,EAAoBW,GACpB,GACIA,EAAiBL,EAAiBK,SAE7BX,EAAoBW,IAGjC,IAAInB,EDgBZ,SAAoBS,GAKhB,IAJA,IAAIa,EAAqB1C,EAAe6B,GACpCpB,EAAa,GACbC,EAAe,GACfiC,EAAU,GACL5B,EAAI,EAAGA,EAAIc,EAASb,OAAQD,IAC5B2B,EAAmBnC,SAASQ,IAAO2B,EAAmBnC,SAASQ,EAAI,GAE5D2B,EAAmBnC,SAASQ,GAKpCL,EAAaP,KAAK0B,EAASd,KAJ3B4B,GAAWd,EAASd,GACpBN,EAAWN,KAAKyC,WAAWD,EAAS,KACpCA,EAAU,IAJVA,GAAWd,EAASd,GAe5B,OANAN,EAAWN,KAAKyC,WAAWD,EAAS,KAEpC9B,QAAQC,IAAIL,GACZI,QAAQC,IAAIJ,GAEGF,EAAMC,EAAYC,GCrCdmC,CAAWN,GAI1B,OAFAV,EAASV,OAAOgB,EAAmBE,EAAqBF,EAAmB,EAAIf,GAC/EP,QAAQC,IAAIe,GACLA,EAIX,SAASiB,EAAWnD,GAEhB,IAAIkC,EAAWlC,EAAQoD,MAAM,IAG7B,GAAIxD,EAAcgB,SAASsB,EAASA,EAASb,OAAS,KACb,MAAlCa,EAASA,EAASb,OAAS,GAC9BgB,QAFJ,CAmBA,GA5DJ,SAAoCH,GAChC,IAAK,IAAId,EAAI,EAAGA,EAAIc,EAASb,OAAS,EAAGD,IACjCxB,EAAcgB,SAASsB,EAASd,KACZ,MAAhBc,EAASd,IAA8B,MAAhBc,EAASd,IACjCxB,EAAcgB,SAASsB,EAASd,EAAI,KAChB,MAApBc,EAASd,EAAI,IAChBiB,IAyCRgB,CAA2BnB,IAK3BA,EDtFR,SAAwBA,GACpB,IAAK,IAAId,EAAI,EAAGA,EAAIc,EAASb,OAAS,EAAGD,IACrC,GAAoB,MAAhBc,EAASd,GAAY,CAErB,IAAIkC,EAAalC,EAAI,EACrB,GAAIkC,GAAc,EACd,KAAOA,EAAa,IAAM1D,EAAcgB,SAASsB,EAASoB,KACtDA,IAGR,IAAIC,EAAWnC,EAAI,EAEnB,IADAF,QAAQC,IAAR,sBAA2BoC,IACpBA,EAAWrB,EAASb,SAAWzB,EAAcgB,SAASsB,EAASqB,KAClEA,IAGJrC,QAAQC,IAAIe,GACZhB,QAAQC,IAAI,WACZD,QAAQC,IAAImC,GACZpC,QAAQC,IAAIoC,GAEZ,IADA,IAAIC,EAAU,GACLC,EAAIH,EAAa,EAAGG,EAAIF,EAAUE,IACvCD,GAAWtB,EAASuB,GAKxB,OAHAvB,EAASV,OAAQ8B,EAAa,EAAKC,EAAWD,EAAa,EAAIE,GAC/DtC,QAAQC,IAAIe,GAELA,EAGf,OAAOA,ECwDQwB,CADXxB,EDpDR,SAAmB5B,GACf,IAAK,IAAIc,EAAI,EAAGA,EAAId,EAASe,OAAS,EAAGD,IACjB,MAAhBd,EAASc,IAAkC,MAApBd,EAASc,EAAI,KACpCd,EAASc,GAAK,IACdd,EAASkB,OAAOJ,EAAI,EAAG,IAI/B,OAAOd,EC4CQqD,CADXzB,ED9FR,SAAyB5B,GACrB,GAAIA,EAASe,OAAS,GAAqB,MAAhBf,EAAS,IAA8B,MAAhBA,EAAS,GAAY,CACnE,IAAIsD,EAAe,IAAMtD,EAAS,GAClCA,EAASkB,OAAO,EAAG,EAAGoC,GAI1B,OADA1C,QAAQC,IAAIb,GACLA,ECuFQuD,CADX3B,EDxGR,SAA+B5B,GAC3B,IAAK,IAAIc,EAAI,EAAGA,EAAId,EAASe,OAAS,EAAGD,IACjB,MAAhBd,EAASc,IAAkC,MAApBd,EAASc,EAAI,KACpCd,EAASc,GAAK,IACdd,EAASkB,OAAOJ,EAAI,EAAG,IAI/B,OAAOd,ECgGQwD,CAAsB5B,OAKrBtB,SAAS,MDgF7B,SAAyBsB,GACrB,IAAK,IAAId,EAAI,EAAGA,EAAIc,EAASb,OAAQD,IACjC,GAAoB,MAAhBc,EAASd,GAAY,CACrB,IAAIkC,EAAalC,EAAI,EACrB,GAAIkC,GAAc,EACd,KAAOA,EAAa,IAAM1D,EAAcgB,SAASsB,EAASoB,KACtDA,IAMR,IAFA,IAAI5E,EAAQ,GAEJ4D,EAAIgB,EAAYhB,EAAIlB,EAAGkB,IAC3B5D,GAASwD,EAASI,GAEtB,IAAIjB,EAAS3C,EAAM2C,OAEf0C,EADJrF,EAAQuE,WAAWvE,GAInB,IAFAwC,QAAQC,IAAR,uBAA4BzC,IAEtBA,EAAQ,GAEVqF,KADArF,EASJ,OANAwC,QAAQC,IAAR,2BAAgC4C,IAChC7C,QAAQC,IAAIzC,EAAM2C,QAElBa,EAASV,OAAQ8B,EAAajC,EAAS,EAAG0C,GAC1C7C,QAAQC,IAAIe,GAELA,GC7GP8B,CAAgB9B,GAKhBD,EAAoBC,GACpB,GACIA,EAAWK,EAAiBL,SAEvBD,EAAoBC,IAMjC,IACA,ED/CR,SAAiC5B,EAAUyC,GAIvC,IAHA,IAAIjC,EAAa,GACbC,EAAe,GACfiC,EAAU,GACL5B,EAAI,EAAGA,EAAId,EAASe,OAAQD,IAC5B2B,EAAmBnC,SAASQ,IAAO2B,EAAmBnC,SAASQ,EAAI,GAE5D2B,EAAmBnC,SAASQ,GAKpCL,EAAaP,KAAKF,EAASc,KAJ3B4B,GAAW1C,EAASc,GACpBN,EAAWN,KAAKyC,WAAWD,EAAS,KACpCA,EAAU,IAJVA,GAAW1C,EAASc,GAW5B,OAFAN,EAAWN,KAAKyC,WAAWD,EAAS,KAE7B,CAAElC,aAAYC,gBC8BkBkD,CAAwB/B,EADlC7B,EAAe6B,IAEpCT,EAAWZ,EADf,EAAMC,WAAN,EAAkBC,cAGfmD,MAAMzC,GACLY,IAGJP,EAAWL,IAIf,IAQM0C,EAAqB,SAACC,GACxB,OAAQA,EAAMC,OAAO3F,OACjB,IAAK,KACDoD,EAAW,IACXE,GAAiB,GACjB,MACJ,IAAK,IACDmB,EAAWnD,GACX,MACJ,IAAK,MACD8B,GAAW,kBAAK9B,EAAQsE,WAAWC,UAAU,EAAGvE,EAAQqB,OAAS,MACjE,MACJ,QACIS,GAAW,kBAAM9B,EAAUoE,EAAMC,OAAO3F,WAMpD,OACI,sBAAKS,UAAU,wBAAf,UACI,cAAC,EAAD,CAAmBa,QAASA,EAASC,YA7BzB,SAAAmE,GAChBtC,GAAW,kBAAMsC,EAAMC,OAAO3F,UA4BqC8F,SAzBlD,SAACJ,GAClBlD,QAAQC,IAAIiD,EAAMK,QAyBd,sBAAKtF,UAAU,+BAAf,UACI,cAAC,EAAD,CAAkBO,mBAAoByE,IACtC,cAAC,EAAD,CAAe9E,kBAAmB8E,IAClC,cAAC,EAAD,CAAoB9E,kBAAmB8E,OAE1CpC,GAAiB,sBAAK5C,UAAU,QAAf,UACd,uCACA,gFCrKDuF,MATf,WACE,OACE,sBAAKvF,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,mCACA,cAAC,EAAD,QCDNwF,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.54fc3069.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n    const { type, onClick, value, disabled, children, size, inverse, danger } = props;\r\n\r\n    const sizeClass = size ? `button--size` : \"\";\r\n    const inverseClass = inverse ? `button--inverse` : \"\";\r\n    const dangerClass = danger ? `button--danger` : \"\";\r\n\r\n    return (\r\n        <button\r\n            className={`button ${sizeClass} ${dangerClass} ${inverseClass}`}\r\n            type={type}\r\n            onClick={onClick}\r\n            disabled={disabled}\r\n            value={value}\r\n        >\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport Button from '../UIElements/Button';\r\n\r\nimport \"./IntegerKeypad.css\";\r\n\r\n\r\nconst IntegerKeypad = ({ handleButtonClick }) => {\r\n    const buttonArray = [\r\n        { value: 1, label: \"1\" },\r\n        { value: 2, label: \"2\" },\r\n        { value: 3, label: \"3\" },\r\n        { value: 4, label: \"4\" },\r\n        { value: 5, label: \"5\" },\r\n        { value: 6, label: \"6\" },\r\n        { value: 7, label: \"7\" },\r\n        { value: 8, label: \"8\" },\r\n        { value: 9, label: \"9\" },\r\n        { value: 0, label: \"0\" },\r\n        { value: \".\", label: \".\" }\r\n    ]\r\n\r\n\r\n    return (\r\n        <div className=\"integerKeypad\">\r\n            {buttonArray.map(button => (\r\n                <Button key={button.label} onClick={handleButtonClick} value={button.value}>\r\n                    {button.label}\r\n                </Button>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IntegerKeypad;\r\n","import React from 'react';\r\n\r\nimport Button from '../UIElements/Button';\r\n\r\nimport \"./OptionsContainer.css\";\r\n\r\nconst OptionsContainer = ({handleOptionsClick}) => {\r\n\r\n    const optionsArray = [\r\n        { value: \"AC\", label: \"AC\" },\r\n        { value: \"(\", label: \"(\" },\r\n        { value: \")\", label: \")\" },\r\n        {value: \"Del\", label: \"Del\"}\r\n    ]\r\n\r\n\r\n    return (\r\n        <div className=\"optionsKeypad\">\r\n            {optionsArray.map(option => (\r\n                <Button\r\n                    className=\"button--option\"\r\n                    key={option.label}\r\n                    onClick={handleOptionsClick}\r\n                    value={option.value}>\r\n                    {option.label}\r\n                </Button>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OptionsContainer;\r\n","const OPERATION_ARR = [\"!\", \"%\", \"/\", \"*\", \"-\", \"+\", \"=\"];\r\n\r\nexport default OPERATION_ARR;","import React from 'react';\r\n\r\nimport Button from '../UIElements/Button';\r\nimport OPERATION_ARR from '../SharedStatic/OPERATION_ARR';\r\n\r\nimport \"./OperationContainer.css\";\r\n\r\nconst OperationContainer = ({ handleButtonClick }) => {\r\n\r\n    return (\r\n        <div className=\"operationKeypad\">\r\n            {OPERATION_ARR.map(operation => (\r\n                <Button\r\n                    className=\"button--operation\"\r\n                    key={operation}\r\n                    onClick={handleButtonClick}\r\n                    value={operation}>\r\n                    {operation}\r\n                </Button>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OperationContainer\r\n","import React from 'react';\r\n\r\nimport \"./CalculatorDisplay.css\";\r\n\r\nconst CalculatorDisplay = ({ display, handleInput, handleSubmit }) => {\r\n    return (\r\n            <input\r\n                className=\"calculator-display\"\r\n                type=\"test\"\r\n                onChange={handleInput}\r\n                value={display}\r\n                onKeyDown={handleSubmit}\r\n            />\r\n    )\r\n}\r\n\r\nexport default CalculatorDisplay;\r\n","import OPERATION_ARR from \"../SharedStatic/OPERATION_ARR\";\r\n\r\nfunction removeDoubleNegatives(valueArr) {\r\n    for (let i = 0; i < valueArr.length - 1; i++) {\r\n        if (valueArr[i] === \"-\" && valueArr[i + 1] === \"-\") {\r\n            valueArr[i] = \"+\";\r\n            valueArr.splice(i + 1, 1);\r\n        }\r\n    }\r\n\r\n    return valueArr;\r\n}\r\n\r\nfunction leadingNegative(valueArr) {\r\n    if (valueArr.length > 1 && valueArr[0] === \"-\" && valueArr[1] !== \"-\") {\r\n        let updatedValue = \"-\" + valueArr[1]\r\n        valueArr.splice(0, 2, updatedValue);\r\n    }\r\n\r\n    console.log(valueArr);\r\n    return valueArr;\r\n}\r\n\r\nfunction handleDecimals(equation) {\r\n    for (let i = 0; i < equation.length - 1; i++) {\r\n        if (equation[i] === \".\") {\r\n            //find the start of the decimal\r\n            let startIndex = i - 1;\r\n            if (startIndex >= 0) {\r\n                while (startIndex > 0 && !OPERATION_ARR.includes(equation[startIndex])) {\r\n                    startIndex--;\r\n                }\r\n            }\r\n            let endIndex = i + 1;\r\n            console.log(`ENDINDEX IS ${endIndex}`);\r\n            while (endIndex < equation.length && !OPERATION_ARR.includes(equation[endIndex])) {\r\n                endIndex++;\r\n            }\r\n\r\n            console.log(equation);\r\n            console.log(\"DECIMAL\");\r\n            console.log(startIndex);\r\n            console.log(endIndex);\r\n            let decimal = \"\";\r\n            for (let k = startIndex + 1; k < endIndex; k++) {\r\n                decimal += equation[k];\r\n            }\r\n            equation.splice((startIndex + 1), (endIndex - startIndex - 1), decimal);\r\n            console.log(equation);\r\n\r\n            return equation;\r\n        }\r\n    }\r\n    return equation;\r\n}\r\n\r\nfunction plusMinus(valueArr) {\r\n    for (let i = 0; i < valueArr.length - 1; i++) {\r\n        if (valueArr[i] === \"+\" && valueArr[i + 1] === \"-\") {\r\n            valueArr[i] = \"-\";\r\n            valueArr.splice(i + 1, 1);\r\n        }\r\n    }\r\n\r\n    return valueArr;\r\n}\r\n\r\nfunction findOperations(valueArr) {\r\n    let modifiedOperationsArr = [...OPERATION_ARR];\r\n    modifiedOperationsArr.push(\"(\");\r\n    modifiedOperationsArr.push(\")\");\r\n    let opertionsArr = [];\r\n    valueArr.forEach((value, index) => {\r\n        if (modifiedOperationsArr.includes(value)) {\r\n            opertionsArr.push(index);\r\n        }\r\n    });\r\n\r\n    return opertionsArr;\r\n}\r\n\r\nfunction findIntegerOperationArr(valueArr, operationsIndexArr) {\r\n    let integerArr = [];\r\n    let operationArr = [];\r\n    let tempInt = \"\";\r\n    for (let i = 0; i < valueArr.length; i++) {\r\n        if (!operationsIndexArr.includes(i) && !operationsIndexArr.includes(i + 1)) {\r\n            tempInt += valueArr[i];\r\n        } else if (!operationsIndexArr.includes(i)) {\r\n            tempInt += valueArr[i];\r\n            integerArr.push(parseFloat(tempInt, 10));\r\n            tempInt = \"\";\r\n        } else {\r\n            operationArr.push(valueArr[i])\r\n        }\r\n    }\r\n    integerArr.push(parseFloat(tempInt, 10));\r\n\r\n    return { integerArr, operationArr };\r\n}\r\n\r\nfunction solveSetup(equation) {\r\n    let operationsIndexArr = findOperations(equation);\r\n    let integerArr = [];\r\n    let operationArr = [];\r\n    let tempInt = \"\";\r\n    for (let i = 0; i < equation.length; i++) {\r\n        if (!operationsIndexArr.includes(i) && !operationsIndexArr.includes(i + 1)) {\r\n            tempInt += equation[i];\r\n        } else if (!operationsIndexArr.includes(i)) {\r\n            tempInt += equation[i];\r\n            integerArr.push(parseFloat(tempInt, 10));\r\n            tempInt = \"\";\r\n        } else {\r\n            operationArr.push(equation[i])\r\n        }\r\n    }\r\n    integerArr.push(parseFloat(tempInt, 10));\r\n\r\n    console.log(integerArr);\r\n    console.log(operationArr);\r\n\r\n    let solution = solve(integerArr, operationArr);\r\n    return solution;\r\n}\r\n\r\nfunction solve(integerArr, operationArr) {\r\n    let first_order = [\"*\", \"/\", \"%\"];\r\n    let second_order = [\"+\", \"-\"];\r\n\r\n    console.log(\"before everything\");\r\n    console.log(integerArr);\r\n    console.log(operationArr);\r\n\r\n    //first order operations\r\n    for (let i = 0; i < integerArr.length - 1; i++) {\r\n        if (first_order.includes(operationArr[i])) {\r\n            let tempSolution = operate(operationArr[i], integerArr[i], integerArr[i + 1]);\r\n\r\n            operationArr.splice(i, 1);\r\n            integerArr.splice(i, 2, tempSolution)\r\n            i--;\r\n\r\n            console.log(`We got here`);\r\n            console.log(operationArr);\r\n            console.log(integerArr);\r\n        }\r\n    }\r\n    if (integerArr.length === 1) {\r\n        return integerArr[0];\r\n    }\r\n\r\n    let solution = 0;\r\n\r\n    for (let i = 0; i < integerArr.length - 1; i++) {\r\n        if (second_order.includes(operationArr[i]) && solution === 0) {\r\n            solution = operate(operationArr[i], integerArr[i], integerArr[i + 1]);\r\n        } else {\r\n            solution = operate(operationArr[i], solution, integerArr[i + 1]);\r\n        }\r\n    }\r\n\r\n    console.log(`the solution is ${solution}`);\r\n\r\n    return solution;\r\n}\r\n\r\n\r\nfunction operate(operation, value1, value2) {\r\n    let solution;\r\n    switch (operation) {\r\n        case \"+\":\r\n            solution = value1 + value2;\r\n            break;\r\n        case \"-\":\r\n            solution = value1 - value2;\r\n            break;\r\n        case \"*\":\r\n            solution = value1 * value2;\r\n            break;\r\n        case \"/\":\r\n            solution = value1 / value2;\r\n            break;\r\n        case \"%\":\r\n            solution = value1 % value2;\r\n            break;\r\n        default:\r\n    }\r\n    return solution;\r\n}\r\n\r\nfunction handleFactorial(equation) {\r\n    for (let i = 0; i < equation.length; i++) {\r\n        if (equation[i] === \"!\") {\r\n            let startIndex = i - 1;\r\n            if (startIndex >= 0) {\r\n                while (startIndex > 0 && !OPERATION_ARR.includes(equation[startIndex])) {\r\n                    startIndex--;\r\n                }\r\n            }\r\n\r\n            let value = \"\";\r\n\r\n            for(let j = startIndex; j < i; j++) {\r\n                value += equation[j];\r\n            }\r\n            let length = value.length;\r\n            value = parseFloat(value);\r\n            let factorial = value;\r\n            console.log(`the value is ${value}`);\r\n\r\n            while(value > 2) {\r\n                value--;\r\n                factorial = factorial * value;\r\n            }\r\n            console.log(`the factorial is ${factorial}`);\r\n            console.log(value.length);\r\n\r\n            equation.splice((startIndex), length + 1, factorial);\r\n            console.log(equation);\r\n\r\n            return equation;\r\n        }\r\n    }\r\n    return equation;\r\n}\r\n\r\n\r\n\r\nexport { removeDoubleNegatives, leadingNegative, plusMinus, findOperations, findIntegerOperationArr, solveSetup, solve, handleDecimals, handleFactorial }","import React, { useState } from 'react';\r\n\r\nimport IntegerKeypad from './IntegerKeypad';\r\nimport OptionsContainer from './OptionsContainer';\r\nimport OperationContainer from './OperationContainer';\r\nimport CalculatorDisplay from './CalculatorDisplay';\r\n\r\nimport \"./CalculatorContainer.css\";\r\n\r\nimport OPERATION_ARR from '../SharedStatic/OPERATION_ARR';\r\n\r\nimport {\r\n    removeDoubleNegatives,\r\n    leadingNegative,\r\n    plusMinus, findOperations,\r\n    findIntegerOperationArr,\r\n    solveSetup,\r\n    solve,\r\n    handleDecimals,\r\n    handleFactorial\r\n} from \"../Functions/functions\";\r\n\r\nconst CalculatorContainer = () => {\r\n    const [display, setDisplay] = useState('');\r\n    const [containsError, setContainsError] = useState(false);\r\n\r\n    function containsParenthesis(equation) {\r\n        let validEquation = false;\r\n        let containsFrontParenthesis = false;\r\n        for (let i = 0; i < equation.length - 1; i++) {\r\n            if (equation[i] === \")\" && !containsFrontParenthesis) {\r\n                displayError();\r\n                return;\r\n            }\r\n\r\n            if (equation[i] === \"(\") {\r\n                containsFrontParenthesis = true;\r\n                for (let j = i + 1; j < equation.length; j++) {\r\n                    if (equation[j] === \")\") {\r\n                        validEquation = true;\r\n                    }\r\n                }\r\n                if (!validEquation) {\r\n                    displayError();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        return validEquation;\r\n    }\r\n\r\n    function displayError() {\r\n        setContainsError(true);\r\n        setDisplay(\"Error\");\r\n    }\r\n\r\n    function checkForMultipleOperations(equation) {\r\n        for (let i = 0; i < equation.length - 1; i++) {\r\n            if (OPERATION_ARR.includes(equation[i])\r\n                && (equation[i] !== \"-\" && equation[i] !== \"!\")\r\n                && OPERATION_ARR.includes(equation[i + 1])\r\n                && equation[i + 1] !== \"-\") {\r\n                displayError();\r\n            }\r\n        }\r\n    }\r\n\r\n    function simplifyEquation(equation) {\r\n\r\n        let frontParenthesis = equation.findIndex(value => value === \"(\");\r\n        let closingParenthesis = equation.lastIndexOf(\")\");\r\n\r\n        if (closingParenthesis === -1) {\r\n            displayError();\r\n        }\r\n\r\n        let insideEquation = equation.filter((integer, index) => (index > frontParenthesis && index < closingParenthesis));\r\n        if (containsParenthesis(insideEquation)) {\r\n            do {\r\n                insideEquation = simplifyEquation(insideEquation);\r\n\r\n            } while (containsParenthesis(insideEquation))\r\n        }\r\n\r\n        let solution = solveSetup(insideEquation);\r\n\r\n        equation.splice(frontParenthesis, (closingParenthesis - frontParenthesis + 1), solution);\r\n        console.log(equation);\r\n        return equation;\r\n    }\r\n\r\n    //This function is called when the \"=\" is pressed\r\n    function calculuate(display) {\r\n        //turn the display state into a string\r\n        let equation = display.split(\"\");\r\n\r\n        //if the last value is an operation, throw an error\r\n        if (OPERATION_ARR.includes(equation[equation.length - 1])\r\n            && equation[equation.length - 1] !== \"!\") {\r\n            displayError();\r\n            return;\r\n        }\r\n\r\n        checkForMultipleOperations(equation);\r\n\r\n        equation = removeDoubleNegatives(equation); //remove double negatives\r\n        equation = leadingNegative(equation); //remove leading negative\r\n        equation = plusMinus(equation); // turn any \"+-\" to -\r\n        equation = handleDecimals(equation);\r\n\r\n        if(equation.includes(\"!\")) {\r\n            handleFactorial(equation);\r\n        }\r\n\r\n\r\n        //check for parenthesis\r\n        if (containsParenthesis(equation)) {\r\n            do {\r\n                equation = simplifyEquation(equation);\r\n\r\n            } while (containsParenthesis(equation))\r\n            //if there are double parenthesis, then we have to preform those operations first\r\n        }\r\n\r\n        //at this point there are no parenthesis\r\n\r\n        let operationsIndexArr = findOperations(equation);\r\n        let { integerArr, operationArr } = findIntegerOperationArr(equation, operationsIndexArr);\r\n        let solution = solve(integerArr, operationArr);\r\n\r\n        if(isNaN(solution)) {\r\n            displayError();\r\n            return;\r\n        }\r\n        setDisplay(solution);\r\n\r\n    }\r\n\r\n    const handleInput = event => {\r\n        setDisplay(() => event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        console.log(event.key);\r\n    }\r\n\r\n    const handleIntegerClick = (event) => {\r\n        switch (event.target.value) {\r\n            case 'AC':\r\n                setDisplay('');\r\n                setContainsError(false);\r\n                break;\r\n            case '=':\r\n                calculuate(display);\r\n                break;\r\n            case 'Del':\r\n                setDisplay(()=> display.toString().substring(0, display.length - 1));\r\n                break;\r\n            default:\r\n                setDisplay(() => display + event.target.value);\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"calculator__container\">\r\n            <CalculatorDisplay display={display} handleInput={handleInput} onSubmit={handleSubmit} />\r\n            <div className=\"integer-operation__container\">\r\n                <OptionsContainer handleOptionsClick={handleIntegerClick} />\r\n                <IntegerKeypad handleButtonClick={handleIntegerClick} />\r\n                <OperationContainer handleButtonClick={handleIntegerClick} />\r\n            </div>\r\n            {containsError && <div className=\"error\">\r\n                <h4>ERROR</h4>\r\n                <p>No worries, just hit \"AC\" and try again!</p>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalculatorContainer;\r\n","import CalculatorContainer from \"./Components/CalculatorFeatures/CalculatorContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">CALC... YOU... LATER!</h1>\n      <CalculatorContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}